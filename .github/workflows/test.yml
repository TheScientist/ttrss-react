name: Run Tests

on:
  push:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      releaseMessage:
        description: 'Optional release commit message (uses npm default format if empty)'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test

      - name: Append coverage summary to job summary
        if: always()
        run: node .github/scripts/coverage-summary.js

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage
            coverage/lcov.info

  tag_release:
    name: Bump version and push tag
    # Run only when manually dispatched on the default branch (or explicitly 'main')
    if: >-
      ${{ github.event_name == 'workflow_dispatch' &&
          (github.ref_name == github.event.repository.default_branch || github.ref_name == 'main') }}
    runs-on: ubuntu-latest
    steps:
      - name: Debug ref info
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "ref_name=${{ github.ref_name }}"
          echo "default_branch=${{ github.event.repository.default_branch }}"
      - name: Checkout code with full history
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies (for npm version validation)
        run: npm ci

      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Bump patch version and create tag
        env:
          RELEASE_MESSAGE: ${{ github.event.inputs.releaseMessage }}
        run: |
          if [ -n "$RELEASE_MESSAGE" ]; then
            npm version patch -m "$RELEASE_MESSAGE"
          else
            npm version patch -m "chore(release): %s"
          fi

      - name: Push commit and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # actions/checkout sets up the token for HTTPS push already
          git push --follow-tags
